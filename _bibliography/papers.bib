@InProceedings{sidorov_et_al:LIPIcs.CP.2025.35,
  selected={true},
  abbr={CP},
  author =	{Sidorov, Konstantin and Marijnissen, Imko and Demirovi\'{c}, Emir},
  title =	{{Unite and Lead: Finding Disjunctive Cliques for Scheduling Problems}},
  booktitle =	{31st International Conference on Principles and Practice of Constraint Programming (CP 2025)},
  pages =	{35:1--35:24},
  series =	{Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN =	{978-3-95977-380-5},
  ISSN =	{1868-8969},
  year =	{2025},
  volume =	{340},
  editor =	{de la Banda, Maria Garcia},
  publisher =	{Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.CP.2025.35},
  html =		{https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.CP.2025.35},
  URN =		{urn:nbn:de:0030-drops-238969},
  doi =		{10.4230/LIPIcs.CP.2025.35},
  annote =	{Keywords: Constraint Programming, Lazy Clause Generation, Propagation, Scheduling, Cumulative, Disjunctive},
  abstract = {Constraint programming solvers have seen much success in scheduling problems owing to their efficient reasoning over constraints to solve complex problems in practice. Many algorithms have been proposed for propagating information from a single constraint. However, inferring and exchanging information across multiple constraints can provide deeper insight into the global structure of a problem. In this work, we propose to exchange information amongst constraints by inferring the disjointness of tasks in scheduling problems from many constraints. We do this by (i) augmenting existing propagators, such as the Cumulative and nogoods, to report when pairs of tasks are disjoint, and (ii) leveraging this information by introducing the SelectiveDisjunctive propagator which generates a lower bound on the earliest completion time of cliques of disjoint tasks to determine conflicts. This allows us to aggregate disjointness information spanning multiple constraints to gain a better global overview of the problem, as well as more precise local information. We also identify a problem structure where an LCG solver reasoning over Cumulative constraints separately, without any reformulations, requires an exponential amount of time to prove infeasibility, which we both justify theoretically and show empirically; on the other hand, our approach solves those instances in polynomial time. On particular known RCPSP and RCPSP/max benchmarks, our approach significantly reduces the number of conflicts required to prove optimality when resource contention is high. Additionally, we discover new lower bounds for 16 RCPSP/max instances (closing six of them) and four RCPSP instances (closing one), as well as new upper bounds for two RCPSP/max instances and four RCPSP instances. Furthermore, we empirically analyse our proposed approach to determine which features are beneficial for performance, showing that finding cliques is one of the main bottlenecks and that detecting disjointness during search can lead to improved bounds on certain instances, but it generally negatively impacts learning. This work paves the way for reasoning over the disjointness of tasks inferred from a variety of standard constraints to discover novel information sourced from multiple constraints during search.},
  pdf = {cp2025-unite-and-lead.pdf},
  code = {https://zenodo.org/records/15624366},
  dataset = {https://zenodo.org/records/15624416}
}

@InProceedings{demirovic_et_al:LIPIcs.CP.2024.9,
  abbr={CP},
  author =	{Demirovi\'{c}, Emir and McCreesh, Ciaran and McIlree, Matthew J. and Nordstr\"{o}m, Jakob and Oertel, Andy and Sidorov, Konstantin},
  title =	{{Pseudo-Boolean Reasoning About States and Transitions to Certify Dynamic Programming and Decision Diagram Algorithms}},
  booktitle =	{30th International Conference on Principles and Practice of Constraint Programming (CP 2024)},
  pages =	{9:1--9:21},
  series =	{Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN =	{978-3-95977-336-2},
  ISSN =	{1868-8969},
  year =	{2024},
  volume =	{307},
  editor =	{Shaw, Paul},
  publisher =	{Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.CP.2024.9},
  URN =		{urn:nbn:de:0030-drops-206948},
  doi =		{10.4230/LIPIcs.CP.2024.9},
  html = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.CP.2024.9},
  pdf = {LIPIcs.CP.2024.9.pdf},
  annote =	{Keywords: Proof logging, dynamic programming, decision diagrams}
}

@InProceedings{flippo_et_al:LIPIcs.CP.2024.11,
  abbr={CP},
  author =	{Flippo, Maarten and Sidorov, Konstantin and Marijnissen, Imko and Smits, Jeff and Demirovi\'{c}, Emir},
  title =	{{A Multi-Stage Proof Logging Framework to Certify the Correctness of CP Solvers}},
  booktitle =	{30th International Conference on Principles and Practice of Constraint Programming (CP 2024)},
  pages =	{11:1--11:20},
  series =	{Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN =	{978-3-95977-336-2},
  ISSN =	{1868-8969},
  year =	{2024},
  volume =	{307},
  editor =	{Shaw, Paul},
  publisher =	{Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.CP.2024.11},
  URN =		{urn:nbn:de:0030-drops-206969},
  doi =		{10.4230/LIPIcs.CP.2024.11},
  html = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.CP.2024.11},
  pdf = {LIPIcs.CP.2024.11.pdf},
  annote =	{Keywords: proof logging, formal verification, constraint programming}
}

@ARTICLE{Sidorov2024-Other-01,
  selected={true},
  abbr={arXiv},
  title    = "How To Discover Short, Shorter, and the Shortest Proofs of
              Unsatisfiability: A Branch-and-Bound Approach for Resolution Proof
              Length Minimization",
  author   = "Sidorov, Konstantin and van der Linden, Koos and Correia,
              Gon\c{c}alo Homem de Almeida and de Weerdt, Mathijs and
              Demirovi\'{c}, Emir",
  abstract = "Modern software for propositional satisfiability problems gives a
              powerful automated reasoning toolkit, capable of outputting not
              only a satisfiable/unsatisfiable signal but also a justification
              of unsatisfiability in the form of resolution proof (or a more
              expressive proof), which is commonly used for verification
              purposes. Empirically, modern SAT solvers produce relatively short
              proofs, however, there are no inherent guarantees that these
              proofs cannot be significantly reduced. This paper proposes a
              novel branch-and-bound algorithm for finding the shortest
              resolution proofs; to this end, we introduce a layer list
              representation of proofs that groups clauses by their level of
              indirection. As we show, this representation breaks all
              permutational symmetries, thereby improving upon the
              state-of-the-art symmetry-breaking and informing the design of a
              novel workflow for proof minimization. In addition to that, we
              design pruning procedures that reason on proof length lower bound,
              clause subsumption, and dominance. Our experiments suggest that
              the proofs from state-of-the-art solvers could be shortened by
              30-60\% on the instances from SAT Competition 2002 and by 25-50\%
              on small synthetic formulas. When treated as an algorithm for
              finding the shortest proof, our approach solves twice as many
              instances as the previous work based on SAT solving and reduces
              the time to optimality by orders of magnitude for the instances
              solved by both approaches.",
  year     =  2024,
  keywords = "Proof minimization;Branch-and-bound;Symmetry breaking;Dominance
              pruning;MUS;Propositional satisfiability",
  html = {https://arxiv.org/abs/2411.07955},
  pdf = {https://arxiv.org/pdf/2411.07955},
  poster = {Proof minimization CP24.pdf},
  code = {https://zenodo.org/records/14051922},
  dataset = {https://zenodo.org/records/14052283}
}


@article{Sidorov_Correia_deWeerdt_DemiroviÄ‡_2024,
  abbr={AAAI},
  title={Paths, Proofs, and Perfection: Developing a Human-Interpretable Proof System for Constrained Shortest Paths},
  volume={38},
  url={https://ojs.aaai.org/index.php/AAAI/article/view/30068},
  DOI={10.1609/aaai.v38i18.30068},
  abstractNote={People want to rely on optimization algorithms for complex decisions but verifying the optimality of the solutions can then become a valid concern, particularly for critical decisions taken by non-experts in optimization. One example is the shortest-path problem on a network, occurring in many contexts from transportation to logistics to telecommunications. While the standard shortest-path problem is both solvable in polynomial time and certifiable by duality, introducing side constraints makes solving and certifying the solutions much harder. We propose a proof system for constrained shortest-path problems, which gives a set of logical rules to derive new facts about feasible solutions. The key trait of the proposed proof system is that it specifically includes high-level graph concepts within its reasoning steps (such as connectivity or path structure), in contrast to, e.g., using linear combinations of model constraints. Thus, using our proof system, we can provide a step-by-step, human-auditable explanation showing that the path given by an external solver cannot be improved. Additionally, to maximize the advantages of this setup, we propose a proof search procedure that specifically aims to find small proofs of this form using a procedure similar to A* search. We evaluate our proof system on constrained shortest path instances generated from real-world road networks and experimentally show that we may indeed derive more interpretable proofs compared to an integer programming approach, in some cases leading to much smaller proofs.},
  number={18},
  journal={Proceedings of the AAAI Conference on Artificial Intelligence},
  author={Sidorov, Konstantin and Correia, GonÃ§alo Homem de Almeida and De Weerdt, Mathijs and DemiroviÄ‡, Emir},
  year={2024},
  month={Mar.},
  pages={20794-20802},
  html = {https://doi.org/10.1609/aaai.v38i18.30068},
  pdf = {30068-Article Text-34122-1-2-20240324.pdf},
  video = {https://doi.org/10.48448/hf52-x584},
  poster = {AAAI-24 poster.pdf},
  code = {https://zenodo.org/records/10402563},
  dataset = {https://zenodo.org/records/10402259}
}

